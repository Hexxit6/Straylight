<div class="row">
    <div class="barplot col-12"></div>
</div>
<script>

    // create 2 data_set
    var data1 = [
        {
            "success": true,
            "data": {
                "sources": ["http:\/\/www.polleninfo.org", "http:\/\/www.arso.gov.si\/"],
                "history": [{
                    "type": "index", "kind": "aqi_us", "interval": "daily", "unit": "", "name": "AQI",
                    "data": [{"time": "2022-02-21"}, {
                        "time": "2022-04-22",
                        "ratio": 0.10229700360979,
                        "color": "#31cd31",
                        "value": "36"
                    }, {
                        "time": "2022-04-23",
                        "ratio": 0.16600529261998,
                        "color": "#d9d726",
                        "value": "59"
                    }, {
                        "time": "2022-04-24",
                        "ratio": 0.044642857142857,
                        "color": "#31cd31",
                        "value": "16"
                    }, {
                        "time": "2022-04-25",
                        "ratio": 0.042328041621617,
                        "color": "#31cd31",
                        "value": "15"
                    }, {
                        "time": "2022-04-26",
                        "ratio": 0.10691392081124,
                        "color": "#31cd31",
                        "value": "38"
                    }, {
                        "time": "2022-04-27",
                        "ratio": 0.051587300981794,
                        "color": "#31cd31",
                        "value": "19"
                    }, {
                        "time": "2022-04-28",
                        "ratio": 0.094742061070033,
                        "color": "#31cd31",
                        "value": "34"
                    }, {
                        "time": "2022-04-29",
                        "ratio": 0.098214285714286,
                        "color": "#31cd31",
                        "value": "35"
                    }, {
                        "time": "2022-04-30",
                        "ratio": 0.12229090009417,
                        "color": "#31cd31",
                        "value": "43"
                    }, {
                        "time": "2022-05-01",
                        "ratio": 0.14445970807757,
                        "color": "#d9d726",
                        "value": "51"
                    }, {
                        "time": "2022-05-02",
                        "ratio": 0.089781744820731,
                        "color": "#31cd31",
                        "value": "32"
                    }, {
                        "time": "2022-05-03",
                        "ratio": 0.082837300981794,
                        "color": "#31cd31",
                        "value": "29"
                    }, {
                        "time": "2022-05-04",
                        "ratio": 0.11310795375279,
                        "color": "#31cd31",
                        "value": "40"
                    }, {
                        "time": "2022-05-05",
                        "ratio": 0.12084096636091,
                        "color": "#31cd31",
                        "value": "43"
                    }, {
                        "time": "2022-05-06",
                        "ratio": 0.14145807538714,
                        "color": "#31cd31",
                        "value": "50"
                    }, {
                        "time": "2022-05-07",
                        "ratio": 0.14236111232213,
                        "color": "#31cd31",
                        "value": "50"
                    }, {
                        "time": "2022-05-08",
                        "ratio": 0.13502238682338,
                        "color": "#31cd31",
                        "value": "48"
                    }, {
                        "time": "2022-05-09",
                        "ratio": 0.13995726449149,
                        "color": "#31cd31",
                        "value": "49"
                    }, {
                        "time": "2022-05-10",
                        "ratio": 0.13049450465611,
                        "color": "#31cd31",
                        "value": "46"
                    }, {
                        "time": "2022-05-11",
                        "ratio": 0.14604955400739,
                        "color": "#d9d726",
                        "value": "52"
                    }, {
                        "time": "2022-05-12",
                        "ratio": 0.15238349914551,
                        "color": "#d9d726",
                        "value": "54"
                    }, {
                        "time": "2022-05-13",
                        "ratio": 0.1238425881522,
                        "color": "#31cd31",
                        "value": "44"
                    }, {
                        "time": "2022-05-14",
                        "ratio": 0.11264201572963,
                        "color": "#31cd31",
                        "value": "40"
                    }, {
                        "time": "2022-05-15",
                        "ratio": 0.11979802812849,
                        "color": "#31cd31",
                        "value": "42"
                    }, {
                        "time": "2022-05-16",
                        "ratio": 0.14504477364676,
                        "color": "#d9d726",
                        "value": "51"
                    }, {
                        "time": "2022-05-17",
                        "ratio": 0.076940035138811,
                        "color": "#31cd31",
                        "value": "27"
                    }, {
                        "time": "2022-05-18",
                        "ratio": 0.077876984732492,
                        "color": "#31cd31",
                        "value": "28"
                    }, {
                        "time": "2022-05-19",
                        "ratio": 0.08730158669608,
                        "color": "#31cd31",
                        "value": "31"
                    }, {
                        "time": "2022-05-20",
                        "ratio": 0.14281146458217,
                        "color": "#31cd31",
                        "value": "50"
                    }, {"time": "2022-05-21"}]
                }]
            }
        }
    ];
    data1 = data1[0].data.history[0].data;

    function onStationMapClick(id) {
        $.ajax({
            method: "GET",
            url: "/data/all/"+id,
        })
                .done(function (data) {
                    console.log(data);
                    update(data, "AQI")
                });

    }


    // set the dimensions and margins of the graph
    var margin = {top: 30, right: 30, bottom: 70, left: 60},
            width = 1260 - margin.left - margin.right,
            height = 400 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    var svg = d3.select(".barplot")
            .append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

    // Initialize the X axis
    var x = d3.scaleBand()
            .range([0, width])
            .padding(0.2);

    var xAxis = svg.append("g")
            .attr("transform", "translate(0," + height + ")")

    // Initialize the Y axis
    var y = d3.scaleLinear()
            .range([height, 0]);
    var yAxis = svg.append("g")
            .attr("class", "myYaxis")


    // A function that create / update the plot for a given variable:
    function update(data, key) {

        // Update the X axis
        x.domain(data.map(function (d) {
            return d.date;
        }))
        xAxis.call(d3.axisBottom(x))

        // Update the Y axis
        y.domain([0, d3.max(data, function (d) {
            return d.pollutants[0][key]
        })]);
        yAxis.transition().duration(1000).call(d3.axisLeft(y));

        // Create the u variable
        var u = svg.selectAll("rect")
                .data(data)

        u
                .enter()
                .append("rect") // Add a new rect for each new elements
                .merge(u) // get the already existing elements as well
                .transition() // and apply changes to all of them
                .duration(1000)
                .attr("x", function (d) {
                    return x(d.date);
                })


                .attr("y", function (d) {
                    return y(d.pollutants[0][key]);
                })
                .attr("width", x.bandwidth())
                .attr("height", function (d) {
                    return height - y(d.pollutants[0][key]);
                })
                .attr("fill", function (d) {
                    if (d.pollutants[0][key] > 50) {
                        return "red";
                    } else if (d.pollutants[0][key] > 30) {
                        return "orange";
                    }
                    return "yellow";
                })



        // If less group in the new dataset, I delete the ones not in use anymore
        u
                .exit()
                .remove()
    }

    // Initialize the plot with the first dataset
    // update(data1)

</script>